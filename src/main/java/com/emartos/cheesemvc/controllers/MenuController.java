package com.emartos.cheesemvc.controllers;


import com.emartos.cheesemvc.models.Category;
import com.emartos.cheesemvc.models.Cheese;
import com.emartos.cheesemvc.models.Menu;
import com.emartos.cheesemvc.models.data.CategoryDao;
import com.emartos.cheesemvc.models.data.CheeseDao;
import com.emartos.cheesemvc.models.data.MenuDao;
import com.emartos.cheesemvc.models.forms.AddMenuItemForm;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.Optional;

@Controller
@RequestMapping("menu")
public class MenuController {

    @Autowired
    MenuDao menuDao;

    @Autowired
    CheeseDao cheeseDao;

    //Request path: /menu
    @RequestMapping(value="")
    public String index(Model model) {
        model.addAttribute("title", "Menus");
        model.addAttribute("menus", menuDao.findAll());
        return "menu/index";
    }

    @RequestMapping(value="add", method= RequestMethod.GET)
    public String add(Model model) {
        model.addAttribute("title", "Add Menu");
        model.addAttribute(new Menu());
        return "menu/add";
    }

    @RequestMapping(value="add", method = RequestMethod.POST)
    public String add(@ModelAttribute @Valid Menu newMenu,
                                         Errors errors, Model model) {
        if (errors.hasErrors()) {
            model.addAttribute("title", "Add Menu");
            return "menu/add";
        }

        menuDao.save(newMenu);
        //Hiberante generates the id for each new item (@Autogenerated annotation
        return "redirect:view/" + newMenu.getId();
    }

    @RequestMapping(value="view/{menuId}", method = RequestMethod.GET)
    public String viewMenu(Model model, @PathVariable int menuId) {

        Optional<Menu> optionalMenu = menuDao.findById(menuId);
        Menu menu = optionalMenu.get();
        model.addAttribute("title", menu.getName());
        model.addAttribute("cheeses", menu.getCheeses());
        model.addAttribute("menuId", menu.getId());

        return "menu/view";
    }

    @RequestMapping(value="add-item/{menuId}", method=RequestMethod.GET)
    public String addItem(Model model, @PathVariable int menuId) {

        Optional<Menu> optionalMenu = menuDao.findById(menuId);
        Menu menu = optionalMenu.get();

        AddMenuItemForm form = new AddMenuItemForm(cheeseDao.findAll(), menu);

        model.addAttribute("title", "Add item to menu: " + menu.getName());
        model.addAttribute("form", form);
        return "menu/add-item";
    }

    @RequestMapping(value="add-item", method=RequestMethod.POST)
    public String addItem(Model model, @ModelAttribute @Valid AddMenuItemForm form,
                          Errors errors) {

        if (errors.hasErrors()) {
            model.addAttribute("form", form);
            return "menu/add-item";
        }
        //Retrieve the submitted cheese
        Optional<Cheese> optCheese = cheeseDao.findById(form.getCheeseId());
        Cheese theCheese = optCheese.get();
        //Retrieve the menu that receives the cheese added
        Optional<Menu> optMenu = menuDao.findById(form.getMenuId());
        Menu theMenu = optMenu.get();
        //Add the submitted cheese to the proper menu
        theMenu.addItem(theCheese);
        menuDao.save(theMenu);

        return "redirect:/menu/view/" + theMenu.getId();
    }
}
